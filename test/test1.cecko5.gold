========== tables ==========
struct Str{
	const char*key;
	struct Str*next;
};
void argreverttest(int,char**);
_Bool empty(struct Str**);
int fib(int);
void fibtest();
const char*front(struct Str**);
struct Str*get_str();
int main(int,char**);
void*memset(void*,int,int);
void pointerarithmeticstest();
void pop_front(struct Str**);
int printf(const char*,...);
void push_front(struct Str**,const char*);
int scanf(const char*,...);
int sprintf(char*,const char*,...);
int sscanf(const char*,const char*,...);
void stringtest();
_Bool test();
struct Str array[1000];
int array_end;
struct Str*root;
_Bool status;
void argreverttest(int argc,char**argv){
	int i;
	const char*z;
}
_Bool empty(struct Str**rootp){
}
int fib(int x){
	int s;
}
void fibtest(){
	int n;
	int s;
}
const char*front(struct Str**rootp){
}
struct Str*get_str(){
	struct Str*p;
}
int main(int argc,char**argv){
}
void pointerarithmeticstest(){
	char arr[27];
	char ch;
	char*e;
	char*p;
}
void pop_front(struct Str**rootp){
}
void push_front(struct Str**rootp,const char*key){
	struct Str*p;
}
void stringtest(){
	char arr[100];
	int i;
	char t[40];
}
_Bool test(){
}
========== starting main() ==========
This is test1.c main()
... argreverttest ...
sizeof(struct Str) = 16
argv[0] is "test1.c"
popped "test1.c"
... fibtest ...
fib(20) returned 6765
... stringtest ...
sprintf: 1 text
sscanf: 1 text
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
... pointerarithmeticstest ...
ABCDEFGHIJKLMNOPQRSTUVWXYZ

========== main() returned 0 ==========
========== cecko5 done ==========
