function(CONFIG_TEST ANUM)
	set(CFGNAME "TEST_CECKO${ANUM}")
	if(NOT DEFINED ${CFGNAME})
		set(${CFGNAME} TRUE CACHE BOOL "Test cecko${ANUM}")
		message("${CFGNAME} was not defined, defaulting to TRUE")
	endif()
endfunction()

CONFIG_TEST("1")
CONFIG_TEST("2")
CONFIG_TEST("3")
CONFIG_TEST("4")
CONFIG_TEST("5")

function(MAKE_TEST ANUM NAME)
	set(CFGNAME "TEST_CECKO${ANUM}")
	if(${CFGNAME})
		set(TEST_NAME_RUN "${SOL_PREFIX}A${ANUM}T${NAME}R")
		set(TEST_NAME_JUDGE "${SOL_PREFIX}A${ANUM}T${NAME}J")
		set(TEST_EXE "${SOL_PREFIX}cecko${ANUM}")
		set(TEST_MESSAGE "cecko${ANUM}")
		set(TEST_INPUT "${NAME}.c")
		set(TEST_OUTPUT "${NAME}.${TEST_EXE}.out")
		set(TEST_GOLD "${NAME}.cecko${ANUM}.gold")

		set(FNAME_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/${TEST_OUTPUT}")

		add_test(NAME "${TEST_NAME_RUN}" COMMAND "${TEST_EXE}" "-z" "${FNAME_OUTPUT}" "${TEST_INPUT}" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
		#set_tests_properties("${TEST_NAME_RUN}" PROPERTIES PASS_REGULAR_EXPRESSION ".*${TEST_MESSAGE} done.*")
		set_tests_properties("${TEST_NAME_RUN}" PROPERTIES FIXTURES_SETUP "${TEST_OUTPUT}")
		set_tests_properties("${TEST_NAME_RUN}" PROPERTIES TIMEOUT "5")

		add_test(NAME "${TEST_NAME_JUDGE}" COMMAND "${CMAKE_COMMAND}" "-E" "compare_files" "--ignore-eol" "${FNAME_OUTPUT}" "${TEST_GOLD}" WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR})
		set_tests_properties("${TEST_NAME_JUDGE}" PROPERTIES FIXTURES_REQUIRED "${TEST_OUTPUT}")
		set_tests_properties("${TEST_NAME_JUDGE}" PROPERTIES TIMEOUT "5")
	endif()
endfunction()

MAKE_TEST("1" "test1")
MAKE_TEST("1" "testla-chr-n")
MAKE_TEST("1" "testla-cmt1-n")
MAKE_TEST("1" "testla-cmt2-n")
MAKE_TEST("1" "testla-num-n")
MAKE_TEST("1" "testla-str-n")

MAKE_TEST("2" "test1")
MAKE_TEST("2" "testsxa-arr")
MAKE_TEST("2" "testsxa-enum")
MAKE_TEST("2" "testsxa-expr")
MAKE_TEST("2" "testsxa-stmt")
MAKE_TEST("2" "testsxa-struct")
MAKE_TEST("2" "testsxa-typedef")

MAKE_TEST("3" "testdecl-arr")
MAKE_TEST("3" "testdecl-constptr")
MAKE_TEST("3" "testdecl-elementary")
MAKE_TEST("3" "testdecl-enum")
MAKE_TEST("3" "testdecl-function")
MAKE_TEST("3" "testdecl-funptr")
MAKE_TEST("3" "testdecl-local")
MAKE_TEST("3" "testdecl-pointer")
MAKE_TEST("3" "testdecl-struct")
MAKE_TEST("3" "testdecl-typedef")

MAKE_TEST("4" "testexpr-compop")
MAKE_TEST("4" "testexpr-conv")
MAKE_TEST("4" "testexpr-intop")
MAKE_TEST("4" "testexpr-pointer")
MAKE_TEST("4" "testexpr-ptrop")
MAKE_TEST("4" "testexpr-sizeof")
MAKE_TEST("4" "testexpr-struct")

MAKE_TEST("5" "testcontrol-bool")
MAKE_TEST("5" "testcontrol-for")
MAKE_TEST("5" "testcontrol-if")
MAKE_TEST("5" "testcontrol-ptrrelop")
MAKE_TEST("5" "testcontrol-relop")
MAKE_TEST("5" "testcontrol-shortcut")
MAKE_TEST("5" "testcontrol-while")
MAKE_TEST("5" "testall-fib")
MAKE_TEST("5" "testall-ptrop")
MAKE_TEST("5" "testall-stack")
