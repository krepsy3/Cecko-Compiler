========== tables ==========
// --- GLOBAL TYPEDEFS ---
struct Str{
	const char*key;
	struct Str*next;
};
typedef struct _file_s FILE;
// --- FUNCTION DECLARATIONS ---
void argreverttest(int,char**);
_Bool empty(struct Str**);
int fib(int);
void fibtest();
const char*front(struct Str**);
struct Str*get_str();
int main(int,char**);
void*memset(void*,int,int);
void pointerarithmeticstest();
void pop_front(struct Str**);
int printf(const char*,...);
void push_front(struct Str**,const char*);
int scanf(const char*,...);
int sprintf(char*,const char*,...);
int sscanf(const char*,const char*,...);
void stringtest();
_Bool test();
// --- GLOBAL VARIABLES ---
struct Str array[1000];
int array_end;
struct Str*root;
_Bool status;
// --- FUNCTION DEFINITIONS ---
void argreverttest(int argc,char**argv){
	int i;
	const char*z;
	{
	}
	{
	}
}
_Bool empty(struct Str**rootp){
}
int fib(int x){
	int s;
	{
	}
}
void fibtest(void){
	int n;
	int s;
}
const char*front(struct Str**rootp){
}
struct Str*get_str(void){
	struct Str*p;
}
int main(int argc,char**argv){
	{
	}
}
void pointerarithmeticstest(void){
	char arr[27];
	char ch;
	char*e;
	char*p;
	{
	}
}
void pop_front(struct Str**rootp){
}
void push_front(struct Str**rootp,const char*key){
	struct Str*p;
}
void stringtest(void){
	char arr[100];
	int i;
	char t[40];
}
_Bool test(void){
}
========== cecko3 done ==========
